name: Coverage

on:
  push:
    branches:
      - master
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest

    # Not intended for forks.
    #if: github.repository == 'optuna/optuna'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Setup cache
      uses: actions/cache@v3
      env:
        cache-name: coverage
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/pyproject.toml') }}-v1
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get -y install openmpi-bin libopenmpi-dev libopenblas-dev

    - name: Generate coverage report
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version

        pip install --progress-bar off .[test]
        pip install --progress-bar off .[optional]
        pip install --progress-bar off .[integration] --extra-index-url https://download.pytorch.org/whl/cpu
        pip install "pytorch-lightning<2.0.0"
        pip install pytest-cov

        echo 'import coverage; coverage.process_startup()' > sitecustomize.py
        pytest --cov=./ --cov-report=xml

    - name: Output installed packages
      run: |
        pip freeze --all

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml,!./cache
        flags: unittests
        name: codecov-umbrella
        verbose: true
